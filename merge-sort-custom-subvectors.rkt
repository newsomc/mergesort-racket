#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 58 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 7 #"Monaco\0"
0 15 90 -1 90 -1 1 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 1761 0 27 3 12 #"#lang racket"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 9 #"sort-pair"
0 0 17 3 1 #" "
0 0 17 3 2 #"p)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #">"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 1 #"p"
0 0 17 3 3 #") ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 3 #"p))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 1 #"p"
0 0 17 3 3 #") ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 3 #"p))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 6 #"      "
0 0 17 3 3 #"p))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 5 #"merge"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 2 #"b)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 3 #"let"
0 0 17 3 1 #" "
0 0 17 3 4 #"loop"
0 0 17 3 3 #" (["
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 3 #"] ["
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 3 #"] ["
0 0 17 3 3 #"acc"
0 0 17 3 1 #" "
0 0 17 3 5 #"'()])"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 5 #"    ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" [("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 3 #") ("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 4 #"b)) "
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"           ("
0 0 17 3 7 #"reverse"
0 0 17 3 1 #" "
0 0 17 3 5 #"acc)]"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"          [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 2 #"a)"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";           ("
0 0 17 3 4 #"loop"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 3 #") ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 2 #") "
0 0 17 3 6 #"acc))]"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"          [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 2 #"b)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"           ("
0 0 17 3 4 #"loop"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 2 #") "
0 0 17 3 1 #"b"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 2 #") "
0 0 17 3 6 #"acc))]"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"          [("
0 0 17 3 1 #"<"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 3 #") ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 3 #"b))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"           ("
0 0 17 3 4 #"loop"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 2 #") "
0 0 17 3 1 #"b"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 2 #") "
0 0 17 3 6 #"acc))]"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"          [else"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"           ("
0 0 17 3 5 #"loop "
0 0 17 3 1 #"a"
0 0 17 3 2 #" ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 3 #") ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 2 #") "
0 0 17 3 9 #"acc))])))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 13 #"merge-vectors"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 2 #"b)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"when"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 13 #"vector-length"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 2 #"b)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"when"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 13 #"vector-length"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 2 #"a)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 3 #"let"
0 0 17 3 3 #" (["
0 0 17 3 3 #"acc"
0 0 17 3 2 #" ("
0 0 17 3 11 #"make-vector"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 2 #" ("
0 0 17 3 13 #"vector-length"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 3 #") ("
0 0 17 3 13 #"vector-length"
0 0 17 3 1 #" "
0 0 17 3 6 #"b)))])"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 5 #"    ("
0 0 17 3 3 #"let"
0 0 17 3 1 #" "
0 0 17 3 4 #"loop"
0 0 17 3 3 #" (["
0 0 17 3 2 #"ai"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #"] ["
0 0 17 3 2 #"bi"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #"] ["
0 0 17 3 4 #"acci"
0 0 17 3 1 #" "
0 0 17 3 3 #"0])"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" [("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 2 #"ai"
0 0 17 3 2 #" ("
0 0 17 3 13 #"vector-length"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 4 #")) ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 2 #"bi"
0 0 17 3 2 #" ("
0 0 17 3 13 #"vector-length"
0 0 17 3 1 #" "
0 0 17 3 4 #"b)))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 13 #"             "
0 0 17 3 4 #"acc]"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"          [("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 2 #"ai"
0 0 17 3 2 #" ("
0 0 17 3 13 #"vector-length"
0 0 17 3 1 #" "
0 0 17 3 3 #"a))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"           ("
0 0 17 3 11 #"vector-set!"
0 0 17 3 1 #" "
0 0 17 3 3 #"acc"
0 0 17 3 1 #" "
0 0 17 3 4 #"acci"
0 0 17 3 2 #" ("
0 0 17 3 10 #"vector-ref"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 4 #"bi))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"           ("
0 0 17 3 4 #"loop"
0 0 17 3 1 #" "
0 0 17 3 2 #"ai"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 2 #"bi"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 4 #"acci"
0 0 17 3 1 #" "
0 0 17 3 4 #"1))]"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"          [("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 2 #"bi"
0 0 17 3 2 #" ("
0 0 17 3 13 #"vector-length"
0 0 17 3 1 #" "
0 0 17 3 3 #"b))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"           ("
0 0 17 3 11 #"vector-set!"
0 0 17 3 1 #" "
0 0 17 3 3 #"acc"
0 0 17 3 1 #" "
0 0 17 3 4 #"acci"
0 0 17 3 2 #" ("
0 0 17 3 10 #"vector-ref"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"ai))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"           ("
0 0 17 3 4 #"loop"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 2 #"ai"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 2 #"bi"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 4 #"acci"
0 0 17 3 1 #" "
0 0 17 3 4 #"1))]"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"          [("
0 0 17 3 13 #"< (vector-ref"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 2 #"ai"
0 0 17 3 3 #") ("
0 0 17 3 10 #"vector-ref"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 4 #"bi))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"           ("
0 0 17 3 11 #"vector-set!"
0 0 17 3 1 #" "
0 0 17 3 3 #"acc"
0 0 17 3 1 #" "
0 0 17 3 4 #"acci"
0 0 17 3 2 #" ("
0 0 17 3 10 #"vector-ref"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"ai))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"           ("
0 0 17 3 4 #"loop"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 2 #"ai"
0 0 17 3 1 #" "
0 0 17 3 3 #"1) "
0 0 17 3 2 #"bi"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 4 #"acci"
0 0 17 3 1 #" "
0 0 17 3 4 #"1))]"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"          [else"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"           ("
0 0 17 3 11 #"vector-set!"
0 0 17 3 1 #" "
0 0 17 3 3 #"acc"
0 0 17 3 1 #" "
0 0 17 3 4 #"acci"
0 0 17 3 2 #" ("
0 0 17 3 10 #"vector-ref"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 4 #"bi))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"           ("
0 0 17 3 4 #"loop"
0 0 17 3 1 #" "
0 0 17 3 2 #"ai"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 2 #"bi"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 4 #"acci"
0 0 17 3 1 #" "
0 0 17 3 8 #"1))]))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 14 #";; Sub Vectors"
0 0 23 29 1 #"\n"
0 0 17 3 74
(
 #";; ================================================================="
 #"======"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"merge-sort"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"sv-merge-sort"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 17 #"sub-vector-length"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"        "
0 0 14 3 2 #"sv"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 23 3 3 #" (["
0 0 14 3 10 #"first-half"
0 0 23 3 2 #" ("
0 0 14 3 22 #"sub-vector->sub-vector"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 23 3 2 #" ("
0 0 14 3 17 #"sub-vector-length"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 2 #") "
0 0 21 3 1 #"2"
0 0 23 3 2 #") "
0 0 21 3 1 #"1"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ["
0 0 14 3 11 #"second-half"
0 0 23 3 2 #" ("
0 0 14 3 22 #"sub-vector->sub-vector"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 23 3 2 #" ("
0 0 14 3 17 #"sub-vector-length"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 2 #") "
0 0 21 3 1 #"2"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 17 #"sub-vector-length"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 2 #") "
0 0 21 3 1 #"1"
0 0 23 3 4 #"))])"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 17 #"merge-sub-vectors"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 13 #"sv-merge-sort"
0 0 23 3 1 #" "
0 0 14 3 10 #"first-half"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 13 #"sv-merge-sort"
0 0 23 3 1 #" "
0 0 14 3 11 #"second-half"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 14 3 1 #"v"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 6 #"second"
0 0 23 3 2 #" ("
0 0 14 3 13 #"sv-merge-sort"
0 0 23 3 2 #" ("
0 0 14 3 18 #"vector->sub-vector"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 2 #") "
0 0 21 3 1 #"1"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"merge-sub-vectors"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 17 #"sub-vector-length"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 2 #") "
0 0 21 3 1 #"0"
0 0 23 3 2 #") "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 17 #"sub-vector-length"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 21 3 1 #"0"
0 0 23 3 2 #") "
0 0 14 3 1 #"a"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 23 3 3 #" (["
0 0 14 3 3 #"acc"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-vector"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 17 #"sub-vector-length"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 3 #") ("
0 0 14 3 17 #"sub-vector-length"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 5 #")))])"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 23 3 1 #" "
0 0 14 3 4 #"loop"
0 0 23 3 3 #" (["
0 0 14 3 2 #"ai"
0 0 23 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 3 #"] ["
0 0 14 3 2 #"bi"
0 0 23 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 3 #"] ["
0 0 14 3 4 #"acci"
0 0 23 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 2 #"])"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"          [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 14 3 2 #"ai"
0 0 23 3 2 #" ("
0 0 14 3 17 #"sub-vector-length"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 4 #")) ("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 14 3 2 #"bi"
0 0 23 3 2 #" ("
0 0 14 3 17 #"sub-vector-length"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 18 #"vector->sub-vector"
0 0 23 3 1 #" "
0 0 14 3 3 #"acc"
0 0 23 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 23 3 1 #" "
0 0 14 3 3 #"acc"
0 0 23 3 2 #") "
0 0 21 3 1 #"1"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"          [("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 14 3 2 #"ai"
0 0 23 3 2 #" ("
0 0 14 3 17 #"sub-vector-length"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 11 #"vector-set!"
0 0 23 3 1 #" "
0 0 14 3 3 #"acc"
0 0 23 3 1 #" "
0 0 14 3 4 #"acci"
0 0 23 3 2 #" ("
0 0 14 3 14 #"sub-vector-ref"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 2 #"bi"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 4 #"loop"
0 0 23 3 1 #" "
0 0 14 3 2 #"ai"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 2 #"bi"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 4 #"acci"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"          [("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 14 3 2 #"bi"
0 0 23 3 2 #" ("
0 0 14 3 17 #"sub-vector-length"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 11 #"vector-set!"
0 0 23 3 1 #" "
0 0 14 3 3 #"acc"
0 0 23 3 1 #" "
0 0 14 3 4 #"acci"
0 0 23 3 2 #" ("
0 0 14 3 14 #"sub-vector-ref"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 2 #"ai"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 4 #"loop"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 2 #"ai"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #") "
0 0 14 3 2 #"bi"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 4 #"acci"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"          [("
0 0 14 3 1 #"<"
0 0 23 3 2 #" ("
0 0 14 3 14 #"sub-vector-ref"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 2 #"ai"
0 0 23 3 3 #") ("
0 0 14 3 14 #"sub-vector-ref"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 2 #"bi"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 11 #"vector-set!"
0 0 23 3 1 #" "
0 0 14 3 3 #"acc"
0 0 23 3 1 #" "
0 0 14 3 4 #"acci"
0 0 23 3 2 #" ("
0 0 14 3 14 #"sub-vector-ref"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 2 #"ai"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 4 #"loop"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 2 #"ai"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #") "
0 0 14 3 2 #"bi"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 4 #"acci"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 11 #"vector-set!"
0 0 23 3 1 #" "
0 0 14 3 3 #"acc"
0 0 23 3 1 #" "
0 0 14 3 4 #"acci"
0 0 23 3 2 #" ("
0 0 14 3 14 #"sub-vector-ref"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 2 #"bi"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 4 #"loop"
0 0 23 3 1 #" "
0 0 14 3 2 #"ai"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 2 #"bi"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 4 #"acci"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 7 #"))]))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-sub-vector"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #" "
0 0 14 3 2 #"vi"
0 0 23 3 1 #" "
0 0 14 3 2 #"vj"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 10 #"sub-vector"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 15 3 4 #"when"
0 0 23 3 2 #" ("
0 0 14 3 1 #">"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 2 #"vj"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 4 #")) ("
0 0 14 3 6 #"fourth"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 5 #"error"
0 0 23 3 1 #" "
0 0 19 3 28 #"\"exceeded sub-vector bounds\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"sub-vector"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 2 #"vi"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 2 #"vj"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"sub-vector"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #" "
0 0 14 3 2 #"vi"
0 0 23 3 1 #" "
0 0 14 3 2 #"vj"
0 0 23 3 4 #")]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 18 #"vector->sub-vector"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #" "
0 0 14 3 2 #"vi"
0 0 23 3 1 #" "
0 0 14 3 2 #"vj"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"sub-vector"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #" "
0 0 14 3 2 #"vi"
0 0 23 3 1 #" "
0 0 14 3 2 #"vj"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 22 #"sub-vector->sub-vector"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #" "
0 0 14 3 2 #"vi"
0 0 23 3 1 #" "
0 0 14 3 2 #"vj"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"sub-vector"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 2 #"vi"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 2 #"vj"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 18 #"display-sub-vector"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 8 #"for/list"
0 0 23 3 3 #" (["
0 0 14 3 1 #"i"
0 0 23 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 5 #")))])"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 10 #"vector-ref"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 2 #") "
0 0 14 3 1 #"i"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"            "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"sub-vector-ref"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 1 #" "
0 0 14 3 1 #"i"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"when"
0 0 17 3 2 #" ("
0 0 17 3 3 #"not"
0 0 17 3 2 #" ("
0 0 17 3 3 #"eq?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 2 #"sv"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 13 #"sub-vector)) "
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 5 #"    ("
0 0 17 3 5 #"error"
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 14 #"sub-vector-ref"
0 0 17 3 1 #" "
0 0 17 3 6 #"called"
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 3 15 #" non-sub-vector"
0 0 17 3 3 #"\"))"
0 0 23 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"when"
0 0 17 3 2 #" ("
0 0 17 3 2 #"or"
0 0 17 3 2 #" ("
0 0 17 3 1 #"<"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 2 #" ("
0 0 17 3 1 #"-"
0 0 17 3 2 #" ("
0 0 17 3 6 #"fourth"
0 0 17 3 1 #" "
0 0 17 3 2 #"sv"
0 0 17 3 3 #") ("
0 0 17 3 5 #"third"
0 0 17 3 1 #" "
0 0 17 3 6 #"sv))))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 5 #"    ("
0 0 17 3 5 #"error"
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 15 #"sub-vector-ref:"
0 0 17 3 1 #" "
0 0 17 3 3 #"out"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 7 #" bounds"
0 0 17 3 3 #"\"))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 10 #"vector-ref"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 2 #") "
0 0 14 3 1 #"i"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"sub-vector-set!"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 1 #" "
0 0 14 3 1 #"i"
0 0 23 3 1 #" "
0 0 14 3 3 #"val"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"when"
0 0 17 3 2 #" ("
0 0 17 3 3 #"not"
0 0 17 3 2 #" ("
0 0 17 3 3 #"eq?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 2 #"sv"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 13 #"sub-vector)) "
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 5 #"    ("
0 0 17 3 5 #"error"
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 15 #"sub-vector-set!"
0 0 17 3 1 #" "
0 0 17 3 6 #"called"
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 3 15 #" non-sub-vector"
0 0 17 3 3 #"\"))"
0 0 23 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"when"
0 0 17 3 2 #" ("
0 0 17 3 2 #"or"
0 0 17 3 2 #" ("
0 0 17 3 1 #"<"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 2 #" ("
0 0 17 3 1 #"-"
0 0 17 3 2 #" ("
0 0 17 3 6 #"fourth"
0 0 17 3 1 #" "
0 0 17 3 2 #"sv"
0 0 17 3 3 #") ("
0 0 17 3 5 #"third"
0 0 17 3 1 #" "
0 0 17 3 6 #"sv))))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 5 #"    ("
0 0 17 3 5 #"error"
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 16 #"sub-vector-set!:"
0 0 17 3 1 #" "
0 0 17 3 3 #"out"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 7 #" bounds"
0 0 17 3 3 #"\"))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"vector-set!"
0 0 23 3 2 #" ("
0 0 14 3 6 #"second"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 2 #") "
0 0 14 3 1 #"i"
0 0 23 3 2 #") "
0 0 14 3 3 #"val"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"sub-vector-length"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"when"
0 0 17 3 2 #" ("
0 0 17 3 3 #"not"
0 0 17 3 2 #" ("
0 0 17 3 3 #"eq?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 2 #"sv"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 13 #"sub-vector)) "
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 5 #"    ("
0 0 17 3 5 #"error"
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 15 #"sub-vector-set!"
0 0 17 3 1 #" "
0 0 17 3 6 #"called"
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 3 1 #" "
0 0 17 3 17 #"non-sub-vector\"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"   "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 3 #") ("
0 0 14 3 5 #"third"
0 0 23 3 1 #" "
0 0 14 3 2 #"sv"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"random-vector"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 10 #"for/vector"
0 0 23 3 3 #" (["
0 0 14 3 1 #"i"
0 0 23 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 23 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 3 #")])"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 6 #"random"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 7         607 4           0 0           0 100 0 14 3 1 #">"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"vec"
0 0 23 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 1 #" "
0 0 21 3 1 #"5"
0 0 23 3 1 #" "
0 0 21 3 1 #"6"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 14 3 1 #">"
0 0 23 3 2 #" ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-sub-vector"
0 0 23 3 1 #" "
0 0 14 3 3 #"vec"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"5"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 14 3 1 #">"
0 0 23 3 2 #" ("
0 0 14 3 18 #"display-sub-vector"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"2"
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 1 #" "
0 0 21 3 1 #"5"
0 0 23 3 1 #" "
0 0 21 3 1 #"6"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 14 3 1 #">"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-sub-vector"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 14 3 10 #"sub-vector"
0 0 23 3 3 #" #("
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 1 #" "
0 0 21 3 1 #"5"
0 0 23 3 1 #" "
0 0 21 3 1 #"6"
0 0 23 3 2 #") "
0 0 21 3 1 #"2"
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 14 3 1 #">"
0 0 23 3 2 #" ("
0 0 14 3 18 #"display-sub-vector"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-sub-vector"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #"))"
0           0 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"profile-for-n"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 23 3 3 #" (["
0 0 14 3 1 #"v"
0 0 23 3 3 #"  ("
0 0 14 3 13 #"random-vector"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 3 #")])"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 15 #"collect-garbage"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 10 #"let-values"
0 0 23 3 4 #" ([("
0 0 14 3 1 #"_"
0 0 23 3 1 #" "
0 0 14 3 6 #"cpu-ms"
0 0 23 3 1 #" "
0 0 14 3 2 #"__"
0 0 23 3 1 #" "
0 0 14 3 4 #"____"
0 0 23 3 3 #") ("
0 0 14 3 10 #"time-apply"
0 0 23 3 1 #" "
0 0 14 3 10 #"merge-sort"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 4 #"))])"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 14 3 6 #"cpu-ms"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"'"
0 0 17 3 2 #"(("
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 2 #"18"
0 0 17 3 1 #" "
0 0 17 3 4 #"9.0)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 2 #"11"
0 0 17 3 1 #" "
0 0 17 3 5 #"2.75)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 1 #"8"
0 0 17 3 1 #" "
0 0 17 3 2 #"14"
0 0 17 3 1 #" "
0 0 17 3 5 #"1.75)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"16"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 6 #"0.625)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"32"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 7 #"0.3125)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"64"
0 0 17 3 1 #" "
0 0 17 3 2 #"14"
0 0 17 3 1 #" "
0 0 17 3 8 #"0.21875)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 3 #"128"
0 0 17 3 1 #" "
0 0 17 3 2 #"13"
0 0 17 3 1 #" "
0 0 17 3 10 #"0.1015625)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 3 #"256"
0 0 17 3 1 #" "
0 0 17 3 2 #"17"
0 0 17 3 1 #" "
0 0 17 3 11 #"0.06640625)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 3 #"512"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 9 #"0.078125)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"  (1024"
0 0 17 3 1 #" "
0 0 17 3 2 #"57"
0 0 17 3 1 #" "
0 0 17 3 13 #"0.0556640625)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"2048"
0 0 17 3 1 #" "
0 0 17 3 2 #"97"
0 0 17 3 1 #" "
0 0 17 3 14 #"0.04736328125)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"4096"
0 0 17 3 1 #" "
0 0 17 3 3 #"195"
0 0 17 3 1 #" "
0 0 17 3 15 #"0.047607421875)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"8192"
0 0 17 3 1 #" "
0 0 17 3 3 #"378"
0 0 17 3 1 #" "
0 0 17 3 15 #"0.046142578125)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"16384"
0 0 17 3 1 #" "
0 0 17 3 3 #"786"
0 0 17 3 1 #" "
0 0 17 3 16 #"0.0479736328125)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"32768"
0 0 17 3 1 #" "
0 0 17 3 4 #"1655"
0 0 17 3 1 #" "
0 0 17 3 18 #"0.050506591796875)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"65536"
0 0 17 3 1 #" "
0 0 17 3 4 #"3535"
0 0 17 3 1 #" "
0 0 17 3 19 #"0.0539398193359375)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"131072"
0 0 17 3 1 #" "
0 0 17 3 4 #"8158"
0 0 17 3 1 #" "
0 0 17 3 19 #"0.0622406005859375)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"262144"
0 0 17 3 1 #" "
0 0 17 3 5 #"16349"
0 0 17 3 1 #" "
0 0 17 3 21 #"0.062366485595703125)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"524288"
0 0 17 3 1 #" "
0 0 17 3 5 #"33554"
0 0 17 3 1 #" "
0 0 17 3 20 #"0.06399917602539062)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 7 #"1048576"
0 0 17 3 1 #" "
0 0 17 3 5 #"69635"
0 0 17 3 1 #" "
0 0 17 3 20 #"0.06640911102294922)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 7 #"2097152"
0 0 17 3 1 #" "
0 0 17 3 6 #"147580"
0 0 17 3 1 #" "
0 0 17 3 21 #"0.07037162780761719))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"our-profile"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 8 #"for/list"
0 0 23 3 3 #" (["
0 0 14 3 1 #"i"
0 0 23 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 3 #")])"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 23 3 3 #" (["
0 0 14 3 1 #"m"
0 0 23 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #" "
0 0 14 3 1 #"i"
0 0 23 3 3 #")] "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ["
0 0 14 3 5 #"cpums"
0 0 23 3 2 #" ("
0 0 14 3 13 #"profile-for-n"
0 0 23 3 1 #" "
0 0 14 3 1 #"m"
0 0 23 3 3 #")])"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 1 #"m"
0 0 23 3 1 #" "
0 0 14 3 5 #"cpums"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 5 #"cpums"
0 0 23 3 1 #" "
0 0 14 3 1 #"m"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 14 #"rnrs/sorting-6"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"their-profile"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 8 #"for/list"
0 0 23 3 3 #" (["
0 0 14 3 1 #"i"
0 0 23 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 3 #")])"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 23 3 3 #" (["
0 0 14 3 1 #"m"
0 0 23 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #" "
0 0 14 3 1 #"i"
0 0 23 3 3 #")] "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ["
0 0 14 3 5 #"cpums"
0 0 23 3 2 #" ("
0 0 14 3 13 #"profile-for-n"
0 0 23 3 1 #" "
0 0 14 3 1 #"m"
0 0 23 3 3 #")])"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 1 #"m"
0 0 23 3 1 #" "
0 0 14 3 5 #"cpums"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 5 #"cpums"
0 0 23 3 1 #" "
0 0 14 3 1 #"m"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 19 #"their-profile-for-n"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 23 3 3 #" (["
0 0 14 3 1 #"v"
0 0 23 3 3 #"  ("
0 0 14 3 13 #"random-vector"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 3 #")])"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 15 #"collect-garbage"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 10 #"let-values"
0 0 23 3 4 #" ([("
0 0 14 3 1 #"_"
0 0 23 3 1 #" "
0 0 14 3 6 #"cpu-ms"
0 0 23 3 1 #" "
0 0 14 3 2 #"__"
0 0 23 3 1 #" "
0 0 14 3 4 #"____"
0 0 23 3 3 #") ("
0 0 14 3 10 #"time-apply"
0 0 23 3 1 #" "
0 0 14 3 11 #"vector-sort"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 1 #" "
0 0 14 3 1 #"<"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 4 #"))])"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 14 3 6 #"cpu-ms"
0 0 23 3 3 #")))"
0           0
